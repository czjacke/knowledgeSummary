1.预处理指令
预处理指令：预处理器根据预处理指令读入源代码替换到预处理指令出，然后将修改过的源代码递交给编辑器进行编译处理。
#include<stdio.h>
#define MAX_COLS 20


c语言中，所有传递给函数的参数都是按值传递的。
0代表假的，非0为真。


2、输入输出函数：
gets函数从标准输入读取一行文本并把它存储到数组中。一行输入由一串字符组成，以一个换行符结尾，gets函数会丢弃换行符，并在该行的末尾存储一个NUL字节(一个NUL字节是指字节模式为全0的字节，类似于“\0”这样的字符常量)，然后gets会返回一个非NULL的地址指针，表示成功读取，当gets函数被调用而没有读取到输入信息时，它会返回一个NULL值，表示到达输入的末尾（文件末尾）。

puts函数是gets函数的输出版本，它把指定的字符串写到标准输出并在末尾添加一个换行符。


scanf函数接收几个参数，其中第1个参数是一个格式字符串，用于藐视期望的输入类型。剩余几个参数都是变量，用于存储函数所读取的输入数据，该函数的返回值是函数成功转换并存储在参数中值的个数。scanf函数的所有标量参数的前面都必须要加上个"&"符号，而数组或者指针参数是不需要加这个符号的，scanf函数输入值之前的空白（空格、制表符、换行符等）会被跳过，值后面的空白表示该值的结结束。


getchar函数从标准输入读取一个字符并返回它的值，如果输入中不存在任何字符，函数就会返回常量EOF，用于提示文件的结尾。EOF是一个整形值，







C语言中的字符串是一串以NUL字符结尾的字符。NUL就是一个字符终止符，它本身并不被看做是字符串的一部分，但是，它要占用一个字节的存储空间。
NUL是ASCII字符集中“\0”字符的名字，它的字节全为0，而NULL是一个值为0的指针。NULL在头文件stdio.h中被定义。但是，并不存在预定义的NUL符号，如果想要使用它而不是字符串常量"\0"，需要自行定义。

3、初始化

定义的变量如果没有初始化，则变量的值是一个不可预料的值，如果是指针的话，则会有很多问题。






4、修饰符
const:

5、环境编译执行
源文件 -> 编译（预处理 -》解析）-》目标代码（汇编 -》 二进制机器语言） -》连接器连接形成可执行文件（引入标准C语言函数库中任何被程序所使用到的函数，也可以将个人的程序库进行引用）
